# 虛擬貨幣價格追蹤服務 MVP 規格說明

## 產品概述

開發一個虛擬貨幣價格追蹤服務的最小可行產品(MVP)，提供基本但實用的虛擬貨幣市場資訊。服務包含兩個主要頁面：虛擬貨幣列表頁和詳細資訊頁，專注於提供清晰、即時的價格資訊和基本市場數據。

## 技術要求

- 使用 Next.js 15 (App Router) 建立專案
- 採用 React 19、Shadcn UI 和 Tailwind CSS 構建介面
- 實現響應式設計，支援桌面和移動設備
- 使用 localstorage 當作緩存資料庫
- 使用 SWR 或 React Query 進行數據獲取與緩存
- 使用 TradingView Lightweight Charts 實現圖表功能

## 核心功能

### 全域功能

- 深色/淺色模式切換
- 法幣單位切換（預設USD，至少支援TWD）
- 基本錯誤處理和加載狀態顯示

### 列表頁（首頁）功能

#### 市場概覽區
- 加密貨幣總市值和24小時變化
- 比特幣主導地位百分比
- 簡易市場情緒指標

#### 幣種列表
- 顯示前100名加密貨幣
- 每個幣種顯示：排名、圖標、名稱、代號、當前價格、24小時變動（金額和百分比）、市值
- 支援分頁加載
- 點擊幣種導航至詳細頁

#### 排序與篩選
- 按市值、價格、漲跌幅排序功能
- 基本分類標籤（全部、DeFi、Layer1等，至少3-5類）

#### 搜尋功能
- 簡單關鍵字搜尋，支援名稱和代號

### 詳細頁功能

#### 幣種基本資訊
- 幣種圖標、名稱、代號
- 當前價格和24小時變動
- 排名和市值資訊

#### 價格圖表
- 互動式價格走勢圖
- 時間範圍選擇（24小時、7天、30天、3個月、1年）
- 基本圖表功能（縮放、懸停查看數據）

#### 市場數據區
- 市值相關數據
- 24小時交易量
- 流通供應量、總供應量
- 歷史高低價（ATH/ATL）及其日期

#### 專案資訊區
- 簡短專案描述
- 官方網站連結
- 區塊鏈瀏覽器連結
- 主要社交媒體連結

## API 整合

- 主要使用 CoinGecko API 免費版
- 實施伺服器端緩存（Redis 或檔案緩存）降低 API 調用頻率
- 基本數據每30分鐘更新一次
- 分批獲取幣種數據（而非單一查詢）以優化 API 使用

### 關鍵 API 端點
- `/coins/markets` - 獲取多幣種列表數據
- `/coins/{id}` - 獲取單一幣種詳細資訊
- `/global` - 獲取全球市場數據
- `/coins/{id}/market_chart` - 獲取歷史價格數據

## 頁面資訊結構

### 列表頁結構

```
首頁
├── 頂部導航欄（網站標誌、搜尋框、模式切換）
├── 市場概覽面板（簡明數據卡片）
├── 篩選控制區（分類標籤、排序選擇器）
├── 幣種列表（表格形式）
│   ├── 排名、圖標、名稱、代號
│   ├── 當前價格（可切換法幣單位）
│   ├── 24小時變動（金額及百分比，紅綠色標示）
│   └── 市值
└── 頁尾（分頁控制、數據更新時間戳、資料來源）
```

### 詳細頁結構

```
詳細頁
├── 頂部導航（返回按鈕、幣種基本資訊）
├── 主要價格區（大型價格顯示、變動指標）
├── 互動圖表區（時間範圍選擇器）
├── 市場數據卡片區（關鍵統計數據網格）
├── 專案資訊區（簡介和相關連結）
└── 相關幣種推薦區（簡易橫向滾動列表）
```

## 設計考量

- 採用簡潔、現代的界面設計
- 確保數據可視化清晰易讀
- 使用適當的顏色編碼（上漲綠色，下跌紅色）
- 實現基本骨架屏幕減少載入空白感
- 優先考慮主流幣種的數據顯示質量

## 開發優先順序

1. 基礎架構設置和 API 整合
2. 列表頁基本功能實現
3. 詳細頁基本資訊和圖表
4. 搜尋和篩選功能
5. 優化與錯誤處理
6. UI/UX 精細調整

## 技術實施建議

- 實施 ISR（增量靜態再生成）提高列表頁性能
- 使用 Suspense 處理數據加載
- 設計適合緩存的數據結構
- 實現前端數據轉換以適應 UI 需求
- 開發環境中模擬 API 速率限制以測試異常處理

## 成功標準

MVP 應達到以下目標：
- 基本功能正常運作，無明顯錯誤
- 頁面載入時間合理（首次內容繪製 < 2秒）
- 正確顯示至少前 100 名虛擬貨幣的基本資訊
- 價格和圖表數據準確反映市場狀況
- 響應式設計在主流設備上正常顯示